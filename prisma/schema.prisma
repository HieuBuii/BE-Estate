//npx prisma db push

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Type {
  buy
  rent
}
enum Property {
  apartment
  house
  condo
  land
}

enum Status {
  available
  wasRented
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  phoneNumber String
  password String
  avatar String?
  firstName String
  lastName String
  address String
  gender String
  createdAt DateTime @default(now())
  chats Chat[] @relation(fields: [chatIDs], references: [id])
  chatIDs String[] @db.ObjectId

  posts Post[]
  savedPost SavedPost[]
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  price Int
  images String[]
  address String
  city String
  bedrooms Int
  bathrooms Int
  latitute String
  longitute String
  desc String
  utilities String
  pet String
  income String
  size Int
  school Int
  bus Int
  restaurant Int
  type Type
  property Property
  status Status
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  savedPost SavedPost[]
}

model SavedPost {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
  userId String @db.ObjectId
  postId String @db.ObjectId
  createdAt DateTime @default(now())
  
  @@unique([userId, postId])
}

model Chat {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  users User[] @relation(fields: [userIDs], references: [id])
  userIDs String[] @db.ObjectId
  seenBy String[] @db.ObjectId
  messages Message[]
  lastMessage String?
  createdBy String @db.ObjectId
  receiverHiddenFrom DateTime @default("2000-01-01T01:45:19.161+00:00")
  senderHiddenFrom DateTime @default("2000-01-01T01:45:19.161+00:00")
  hiddenWithReceiver String? @db.ObjectId
  hiddenWithSender String? @db.ObjectId
  createdAt DateTime @default(now())
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  text String
  chatId String @db.ObjectId
  chat Chat @relation(fields: [chatId], references: [id])
  userId String
  isUpdated Boolean @default(false)
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
}

